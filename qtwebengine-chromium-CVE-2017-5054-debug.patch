From 4854a4fa365527b57f66f72eab1c07cfc5b2b9fd Mon Sep 17 00:00:00 2001
From: Michal Klocek <michal.klocek@qt.io>
Date: Wed, 19 Jul 2017 16:43:04 +0200
Subject: [PATCH] Fix broken debug build introduced in security backport

Fix DCHECK to call HasSufficientCapacity instead of
HasSufficientCapacityToAdd (introduced in chromium's v8  a76d133f769).
Avoid right-shifting a negative integer in HasSufficientCapacity.

Change-Id: Id5370803896814f7536d7a026985b27e689c902e
---
 chromium/v8/src/objects.cc | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/src/3rdparty/chromium/v8/src/objects.cc b/src/3rdparty/chromium/v8/src/objects.cc
index 9b463de..673a219 100644
--- a/src/3rdparty/chromium/v8/src/objects.cc
+++ b/src/3rdparty/chromium/v8/src/objects.cc
@@ -17281,7 +17281,7 @@ bool HashTable<Derived, Shape, Key>::HasSufficientCapacity(int n) {
   // Return true if:
   //   50% is still free after adding n elements and
   //   at most 50% of the free elements are deleted elements.
-  if (nod <= (capacity - nof) >> 1) {
+  if ((nof < capacity) && ((nod <= (capacity - nof) >> 1))) {
     int needed_free = nof >> 1;
     if (nof + needed_free <= capacity) return true;
   }
@@ -18171,7 +18171,7 @@ Handle<Derived> Dictionary<Derived, Shape, Key>::NewEmpty(
     Isolate* isolate, PretenureFlag pretenure) {
   Handle<Derived> dict = DerivedHashTable::New(isolate, 1, pretenure);
   // Attempt to add one element to the empty dictionary must cause reallocation.
-  DCHECK(!dict->HasSufficientCapacityToAdd(1));
+  DCHECK(!dict->HasSufficientCapacity(1));
   // Initialize the next enumeration index.
   dict->SetNextEnumerationIndex(PropertyDetails::kInitialIndex);
   return dict;
-- 
2.7.4

